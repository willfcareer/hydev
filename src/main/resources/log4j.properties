# This is the configuring for logging displayed in the Application Server
log4j.rootCategory=INFO, stdout, R

# Replace the line above if you want to put a log file into the directory 
# you start Tomcat from
# log4j.rootCategory=INFO, stdout, R

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=[%p] %c{1}.%M(%L) - < %m >%n

log4j.appender.R=org.apache.log4j.RollingFileAppender

# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file

log4j.appender.R.File=logs/hyutil.log

log4j.appender.R.MaxFileSize=4096KB

# Don't keep a backup file
log4j.appender.R.MaxBackupIndex=0

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[Hyutil]%p %d [%t]%c{1}.%M(%L) - < %m >%n

# If programmed properly the most messages would be at DEBUG 
# and the least at FATAL.
log4j.logger.org.wangfy=DEBUG
log4j.logger.org.springframework=DEBUG
log4j.logger.com.meetup=ERROR


# Control logging for other open source packages

# All hibernate log output of "info" level or higher goes to stdout.
# For more verbose logging, change the "info" to "debug" on the last line.

# Changing the log level to DEBUG will result in Hibernate generated
# SQL to be logged.


# Changing the log level to DEBUG will result in the PreparedStatement
# bound variable values to be logged.

 


